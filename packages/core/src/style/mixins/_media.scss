@use "../_variables" as *;

/*******************************************
 * @mixin lf-respond-to-min
 * Media query mixin for minimum width breakpoints.
 *
 * @param {String} $breakpoint
 *   A key that maps to $lf-media-breakpoints (e.g. "md", "lg")
 *
 * Usage:
 *   @include lf-respond-to-min("md") {
 *     // styles for >= 768px
 *   }
 *******************************************/
@mixin lf-respond-to-min($breakpoint) {
  $size: map-get($lf-media-breakpoints, $breakpoint);

  @if $size {
    @media (min-width: #{$size}) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint '#{$breakpoint}'.";
  }
}
/*******************************************
 * @mixin lf-respond-to-max
 * Media query mixin for maximum width breakpoints.
 *
 * @param {String} $breakpoint
 *   A key that maps to $lf-media-breakpoints (e.g. "md", "lg")
 *
 * Usage:
 *   @include lf-respond-to-max("md") {
 *     // styles for <= 767px
 *   }
 *******************************************/
@mixin lf-respond-to-max($breakpoint) {
  $size: map-get($lf-media-breakpoints, $breakpoint);

  @if $size {
    @media (max-width: #{$size}) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint '#{$breakpoint}'.";
  }
}
